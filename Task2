#include <iostream>
#include <vector>
#include <set>
#include <algorithm>

using namespace std;

int main() {
    // Initialize containers: dynamic and static widgets
    vector<string> dynamicWidgets = {"Speedometer", "Tachometer", "GPS", "Compass", "FuelGauge"};
    set<string> staticWidgets = {"Logo", "WarningLights", "HomeButton"};

    // 1. Print all dynamic widgets using iterator
    cout << "Dynamic widgets:\n";
    for (auto it = dynamicWidgets.begin(); it != dynamicWidgets.end(); ++it) {
        cout << *it << endl;
    }

    // 2. Check if a specific widget exists in static widgets
    auto found = staticWidgets.find("WarningLights");
    if (found != staticWidgets.end()) {
        cout << "\n'WarningLights' found in static widgets.\n";
    }

    // 3. Combine dynamic and static widgets into a new vector
    vector<string> allWidgets;
    copy(dynamicWidgets.begin(), dynamicWidgets.end(), back_inserter(allWidgets));
    copy(staticWidgets.begin(), staticWidgets.end(), back_inserter(allWidgets));

    // 4. Use std::find to locate a specific widget in combined list
    auto widget = find(allWidgets.begin(), allWidgets.end(), "Tachometer");
    if (widget != allWidgets.end()) {
        cout << "\nFound 'Tachometer' in the combined list.\n";
    }

    return 0;
}
